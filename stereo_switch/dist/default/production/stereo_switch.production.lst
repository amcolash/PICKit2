

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun May 21 15:42:53 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.40
    13                           ; Generated 01/12/2016 GMT
    14                           ; 
    15                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC12F1822 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  008C                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  0111                     	;# 
    88  0112                     	;# 
    89  0115                     	;# 
    90  0116                     	;# 
    91  0117                     	;# 
    92  0118                     	;# 
    93  0119                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020C                     	;# 
   120  0211                     	;# 
   121  0211                     	;# 
   122  0212                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0213                     	;# 
   126  0214                     	;# 
   127  0214                     	;# 
   128  0215                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0216                     	;# 
   132  0216                     	;# 
   133  0217                     	;# 
   134  0217                     	;# 
   135  0291                     	;# 
   136  0291                     	;# 
   137  0292                     	;# 
   138  0293                     	;# 
   139  0294                     	;# 
   140  0295                     	;# 
   141  0295                     	;# 
   142  0296                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  039A                     	;# 
   147  039C                     	;# 
   148  039D                     	;# 
   149  039E                     	;# 
   150  039F                     	;# 
   151  0FE4                     	;# 
   152  0FE5                     	;# 
   153  0FE6                     	;# 
   154  0FE7                     	;# 
   155  0FE8                     	;# 
   156  0FE9                     	;# 
   157  0FEA                     	;# 
   158  0FEB                     	;# 
   159  0FED                     	;# 
   160  0FEE                     	;# 
   161  0FEF                     	;# 
   162  009D                     _ADCON0bits	set	157
   163  009E                     _ADCON1bits	set	158
   164  009C                     _ADRESH	set	156
   165  009B                     _ADRESL	set	155
   166  0099                     _OSCCONbits	set	153
   167  008C                     _TRISAbits	set	140
   168  0118                     _DACCON0bits	set	280
   169  010C                     _LATAbits	set	268
   170  018C                     _ANSELAbits	set	396
   171                           
   172                           ; #config settings
   173  0000                     
   174                           	psect	cinit
   175  07FE                     start_initialization:	
   176  07FE                     __initialization:	
   177  07FE                     end_of_initialization:	
   178                           ;End of C runtime variable initialization code
   179                           
   180  07FE                     __end_of__initialization:	
   181  07FE  0020               	movlb	0
   182  07FF  2FD3               	ljmp	_main	;jump to C main() function
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:	
   186  0070                     ?_init:	
   187  0070                     ??_init:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ?_main:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_read_adc:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 2 bytes @ 0x0
   198  0070                     	ds	2
   199  0072                     ??_read_adc:	
   200                           
   201                           ; 1 bytes @ 0x2
   202  0072                     	ds	3
   203  0075                     read_adc@ADCValue:	
   204                           
   205                           ; 2 bytes @ 0x5
   206  0075                     	ds	2
   207  0077                     ??_main:	
   208                           
   209                           ; 1 bytes @ 0x7
   210  0077                     	ds	2
   211                           
   212                           	psect	cstackBANK0
   213  0020                     __pcstackBANK0:	
   214  0020                     main@time:	
   215                           
   216                           ; 2 bytes @ 0x0
   217  0020                     	ds	2
   218  0022                     main@counter:	
   219                           
   220                           ; 2 bytes @ 0x2
   221  0022                     	ds	2
   222  0024                     main@value:	
   223                           
   224                           ; 2 bytes @ 0x4
   225  0024                     	ds	2
   226                           
   227                           	psect	maintext
   228  07D3                     __pmaintext:	
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 17 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  value           2    4[BANK0 ] unsigned int 
   239 ;;  counter         2    2[BANK0 ] int 
   240 ;;  time            2    0[BANK0 ] int 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B1F/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1
   250 ;;      Params:         0       0       0
   251 ;;      Locals:         0       6       0
   252 ;;      Temps:          2       0       0
   253 ;;      Totals:         2       6       0
   254 ;;Total ram usage:        8 bytes
   255 ;; Hardware stack levels required when called:    1
   256 ;; This function calls:
   257 ;;		_init
   258 ;;		_read_adc
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           
   265                           ;psect for function _main
   266  07D3                     _main:	
   267                           
   268                           ;main.c: 18: init();
   269                           
   270                           ;incstack = 0
   271                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   272  07D3  27B4               	fcall	_init
   273                           
   274                           ;main.c: 20: LATAbits.LATA0 = 0;
   275  07D4  0022               	movlb	2	; select bank2
   276  07D5  100C               	bcf	12,0	;volatile
   277                           
   278                           ;main.c: 21: LATAbits.LATA1 = 0;
   279  07D6  108C               	bcf	12,1	;volatile
   280                           
   281                           ;main.c: 24: unsigned int value;
   282                           ;main.c: 27: int time = 0;
   283  07D7  0020               	movlb	0	; select bank0
   284  07D8  01A0               	clrf	main@time
   285  07D9  01A1               	clrf	main@time+1
   286                           
   287                           ;main.c: 29: int counter = 0;
   288  07DA  01A2               	clrf	main@counter
   289  07DB  01A3               	clrf	main@counter+1
   290  07DC                     l595:	
   291                           ;main.c: 31: while(1) {
   292                           
   293                           
   294                           ;main.c: 32: value = read_adc();
   295  07DC  2796               	fcall	_read_adc
   296  07DD  0871               	movf	?_read_adc+1,w
   297  07DE  0020               	movlb	0	; select bank0
   298  07DF  00A5               	movwf	main@value+1
   299  07E0  0870               	movf	?_read_adc,w
   300  07E1  00A4               	movwf	main@value
   301                           
   302                           ;main.c: 34: LATAbits.LATA1 = 0;
   303  07E2  0022               	movlb	2	; select bank2
   304  07E3  108C               	bcf	12,1	;volatile
   305                           
   306                           ;main.c: 35: LATAbits.LATA1 = value > 400;
   307  07E4  3001               	movlw	1
   308  07E5  0020               	movlb	0	; select bank0
   309  07E6  0225               	subwf	main@value+1,w
   310  07E7  3091               	movlw	145
   311  07E8  1903               	skipnz
   312  07E9  0224               	subwf	main@value,w
   313  07EA  1C03               	btfss	3,0
   314  07EB  2FEF               	goto	u50
   315  07EC  0022               	movlb	2	; select bank2
   316  07ED  148C               	bsf	12,1	;volatile
   317  07EE  2FF1               	goto	l601
   318  07EF                     u50:	
   319  07EF  0022               	movlb	2	; select bank2
   320  07F0  108C               	bcf	12,1	;volatile
   321  07F1                     l601:	
   322                           
   323                           ;main.c: 62: _delay((unsigned long)((100)*(16000000/4000.0)));
   324  07F1  3003               	movlw	3
   325  07F2  00F8               	movwf	??_main+1
   326  07F3  3008               	movlw	8
   327  07F4  00F7               	movwf	??_main
   328  07F5  3077               	movlw	119
   329  07F6                     u77:	
   330  07F6  0B89               	decfsz	9,f
   331  07F7  2FF6               	goto	u77
   332  07F8  0BF7               	decfsz	??_main,f
   333  07F9  2FF6               	goto	u77
   334  07FA  0BF8               	decfsz	??_main+1,f
   335  07FB  2FF6               	goto	u77
   336  07FC  0000               	nop
   337  07FD  2FDC               	goto	l595
   338  07FE                     __end_of_main:	
   339                           
   340                           	psect	text1
   341  0796                     __ptext1:	
   342 ;; *************** function _read_adc *****************
   343 ;; Defined at:
   344 ;;		line 115 in file "main.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  ADCValue        2    5[COMMON] unsigned int 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  2    0[COMMON] unsigned int 
   351 ;; Registers used:
   352 ;;		wreg
   353 ;; Tracked objects:
   354 ;;		On entry : 0/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1
   358 ;;      Params:         2       0       0
   359 ;;      Locals:         2       0       0
   360 ;;      Temps:          3       0       0
   361 ;;      Totals:         7       0       0
   362 ;;Total ram usage:        7 bytes
   363 ;; Hardware stack levels used:    1
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           
   372                           ;psect for function _read_adc
   373  0796                     _read_adc:	
   374                           
   375                           ;main.c: 116: unsigned int ADCValue;
   376                           ;main.c: 119: ADCON0bits.GO = 1;
   377                           
   378                           ;incstack = 0
   379                           ; Regs used in _read_adc: [wreg]
   380  0796  0021               	movlb	1	; select bank1
   381  0797  149D               	bsf	29,1	;volatile
   382  0798                     l36:	
   383                           ;main.c: 122: while (ADCON0bits.GO);
   384                           
   385  0798  189D               	btfsc	29,1	;volatile
   386  0799  2F98               	goto	l36
   387                           
   388                           ;main.c: 125: ADCValue = ADRESH << 8;
   389  079A  081C               	movf	28,w	;volatile
   390  079B  00F2               	movwf	??_read_adc
   391  079C  01F3               	clrf	??_read_adc+1
   392  079D  0872               	movf	??_read_adc,w
   393  079E  00F3               	movwf	??_read_adc+1
   394  079F  01F2               	clrf	??_read_adc
   395  07A0  0872               	movf	??_read_adc,w
   396  07A1  00F5               	movwf	read_adc@ADCValue
   397  07A2  0873               	movf	??_read_adc+1,w
   398  07A3  00F6               	movwf	read_adc@ADCValue+1
   399                           
   400                           ;main.c: 128: ADCValue = ADCValue + ADRESL;
   401  07A4  081B               	movf	27,w	;volatile
   402  07A5  0775               	addwf	read_adc@ADCValue,w
   403  07A6  00F2               	movwf	??_read_adc
   404  07A7  0876               	movf	read_adc@ADCValue+1,w
   405  07A8  1803               	skipnc
   406  07A9  0A76               	incf	read_adc@ADCValue+1,w
   407  07AA  00F3               	movwf	??_read_adc+1
   408  07AB  0872               	movf	??_read_adc,w
   409  07AC  00F5               	movwf	read_adc@ADCValue
   410  07AD  0873               	movf	??_read_adc+1,w
   411  07AE  00F6               	movwf	read_adc@ADCValue+1
   412                           
   413                           ;main.c: 131: return ADCValue;
   414  07AF  0876               	movf	read_adc@ADCValue+1,w
   415  07B0  00F1               	movwf	?_read_adc+1
   416  07B1  0875               	movf	read_adc@ADCValue,w
   417  07B2  00F0               	movwf	?_read_adc
   418  07B3  0008               	return
   419  07B4                     __end_of_read_adc:	
   420                           
   421                           	psect	text2
   422  07B4                     __ptext2:	
   423 ;; *************** function _init *****************
   424 ;; Defined at:
   425 ;;		line 70 in file "main.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1
   439 ;;      Params:         0       0       0
   440 ;;      Locals:         0       0       0
   441 ;;      Temps:          0       0       0
   442 ;;      Totals:         0       0       0
   443 ;;Total ram usage:        0 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; This function calls:
   446 ;;		Nothing
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _init
   454  07B4                     _init:	
   455                           
   456                           ;main.c: 74: OSCCONbits.SPLLEN=0;
   457                           
   458                           ;incstack = 0
   459                           ; Regs used in _init: [wreg+status,2+status,0]
   460  07B4  0021               	movlb	1	; select bank1
   461  07B5  1399               	bcf	25,7	;volatile
   462                           
   463                           ;main.c: 76: OSCCONbits.IRCF=0x0F;
   464  07B6  3078               	movlw	120
   465  07B7  0499               	iorwf	25,f	;volatile
   466                           
   467                           ;main.c: 78: OSCCONbits.SCS=0x02;
   468  07B8  0819               	movf	25,w	;volatile
   469  07B9  39FC               	andlw	-4
   470  07BA  3802               	iorlw	2
   471  07BB  0099               	movwf	25	;volatile
   472                           
   473                           ;main.c: 82: DACCON0bits.DACEN=0;
   474  07BC  0022               	movlb	2	; select bank2
   475  07BD  1398               	bcf	24,7	;volatile
   476                           
   477                           ;main.c: 85: ANSELAbits.ANSA0 = 0;
   478  07BE  0023               	movlb	3	; select bank3
   479  07BF  100C               	bcf	12,0	;volatile
   480                           
   481                           ;main.c: 86: ANSELAbits.ANSA1 = 0;
   482  07C0  108C               	bcf	12,1	;volatile
   483                           
   484                           ;main.c: 87: ANSELAbits.ANSA2 = 1;
   485  07C1  150C               	bsf	12,2	;volatile
   486                           
   487                           ;main.c: 88: ANSELAbits.ANSA4 = 0;
   488  07C2  120C               	bcf	12,4	;volatile
   489                           
   490                           ;main.c: 91: ADCON0bits.CHS=0x02;
   491  07C3  0021               	movlb	1	; select bank1
   492  07C4  081D               	movf	29,w	;volatile
   493  07C5  3983               	andlw	-125
   494  07C6  3808               	iorlw	8
   495  07C7  009D               	movwf	29	;volatile
   496                           
   497                           ;main.c: 93: ADCON0bits.ADON=1;
   498  07C8  141D               	bsf	29,0	;volatile
   499                           
   500                           ;main.c: 95: ADCON1bits.ADCS=0x01;
   501  07C9  081E               	movf	30,w	;volatile
   502  07CA  398F               	andlw	-113
   503  07CB  3810               	iorlw	16
   504  07CC  009E               	movwf	30	;volatile
   505                           
   506                           ;main.c: 97: ADCON1bits.ADFM=0x01;
   507  07CD  179E               	bsf	30,7	;volatile
   508                           
   509                           ;main.c: 106: TRISAbits.TRISA0 = 0;
   510  07CE  100C               	bcf	12,0	;volatile
   511                           
   512                           ;main.c: 107: TRISAbits.TRISA1 = 0;
   513  07CF  108C               	bcf	12,1	;volatile
   514                           
   515                           ;main.c: 110: TRISAbits.TRISA2 = 1;
   516  07D0  150C               	bsf	12,2	;volatile
   517                           
   518                           ;main.c: 111: TRISAbits.TRISA3 = 1;
   519  07D1  158C               	bsf	12,3	;volatile
   520  07D2  0008               	return
   521  07D3                     __end_of_init:	
   522  007E                     btemp	set	126	;btemp
   523  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      6       6
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_read_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0      71
                                              7 COMMON     2     2      0
                                              0 BANK0      6     6      0
                               _init
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             7     5      2      46
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _read_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      6       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun May 21 15:42:53 2017

            __CFG_CP$OFF 0000                       l36 0798                       u50 07EF  
                     u77 07F6                      l601 07F1                      l595 07DC  
           __CFG_CPD$OFF 0000             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000              main@counter 0022             __CFG_WRT$OFF 0000  
                   _main 07D3                     _init 07B4                     btemp 007E  
                   start 0001            __CFG_IESO$OFF 0000                    ?_main 0070  
                  ?_init 0070            __CFG_WDTE$OFF 0000           __CFG_FCMEN$OFF 0000  
         __CFG_BOREN$OFF 0000                    wtemp0 007E           __CFG_MCLRE$OFF 0000  
        __initialization 07FE             __end_of_main 07FE             __end_of_init 07D3  
                 ??_main 0077                   ??_init 0070           __CFG_PLLEN$OFF 0000  
                 _ADRESH 009C                   _ADRESL 009B           __CFG_STVREN$ON 0000  
       __end_of_read_adc 07B4  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pmaintext 07D3                ?_read_adc 0070                  __ptext1 0796  
                __ptext2 07B4     end_of_initialization 07FE               ??_read_adc 0072  
       __CFG_FOSC$INTOSC 0000                _TRISAbits 008C              _DACCON0bits 0118  
    start_initialization 07FE                ___latbits 0000            __pcstackBANK0 0020  
      __size_of_read_adc 001E                 _LATAbits 010C               _ADCON0bits 009D  
             _ADCON1bits 009E                main@value 0024               _ANSELAbits 018C  
       read_adc@ADCValue 0075                 _read_adc 0796            __size_of_main 002B  
          __size_of_init 001F                 main@time 0020        __CFG_CLKOUTEN$OFF 0000  
             _OSCCONbits 0099  
